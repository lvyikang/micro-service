<?xml version="1.0" encoding="UTF-8"?>
<!--<configuration>
    <include resource="org/springframework/boot/logging/logback/base.xml"/>

    &lt;!&ndash;定义日志文件的存储地址&ndash;&gt;
    <property name="LOG_HOME" value="/Applications/software/WorkSpace/testdemo1/src/main/resources/logFile/logs"/>
    &lt;!&ndash;定义日志文件的输出样式&ndash;&gt;
    <property name="PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n"/>

    &lt;!&ndash; %m输出的信息,%p日志级别,%t线程名,%d日期,%c类的全名 &ndash;&gt;
    <appender name="STDOUT_APPENDER" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            &lt;!&ndash;格式化输出：%d:表示日期   %thread:表示线程名  %-5level:级别从左显示5个字符宽度  %msg:日志消息   %n:是换行符&ndash;&gt;
            <pattern>1-%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger - %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            &lt;!&ndash;高于level中设置的级别，则打印日志&ndash;&gt;
            <onMatch>ACCEPT</onMatch>
            &lt;!&ndash;低于level中设置的级别，则屏蔽日志&ndash;&gt;
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    &lt;!&ndash; 按照每天生成日志文件 &ndash;&gt;
    <appender name="ACCESS_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            &lt;!&ndash;日志文件输出的文件名&ndash;&gt;
            <FileNamePattern>${LOG_HOME}/access_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            &lt;!&ndash;日志文件保留天数&ndash;&gt;
            <MaxHistory>30</MaxHistory>
            &lt;!&ndash;日志文件最大的大小&ndash;&gt;
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                &lt;!&ndash;按照文件大小来进行拆分&ndash;&gt;
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            &lt;!&ndash;格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符&ndash;&gt;
            <pattern>${PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <appender name="ERROR_APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${LOG_HOME}/errors_%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <MaxHistory>30</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>10MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    &lt;!&ndash;自定义 log &ndash;&gt;
    <logger name="org.springframework.web" level="ERROR"/>
    <logger name="org.springboot.sample" level="ERROR"/>
    <logger name="com.aiun" level="DEBUG"/>

    &lt;!&ndash;配置异步日志&ndash;&gt;
    <appender name="ASYNC_APPENDER" class="ch.qos.logback.classic.AsyncAppender">
        <appender-ref ref="ERROR_APPENDER"/>
    </appender>

    &lt;!&ndash; 开发、测试环境 &ndash;&gt;
    <springProfile name="lyk-local,lyk-dev,lyk-test">
        <root level="DEBUG">
            <appender-ref ref="ACCESS_APPENDER" />
        </root>
    </springProfile>

    &lt;!&ndash; 所有环境都要记录错误日志 &ndash;&gt;
    <root level="ERROR,INFO">
        <appender-ref ref="ASYNC_APPENDER"/>
        <appender-ref ref="STDOUT_APPENDER"/>
        <appender-ref ref="ACCESS_APPENDER"/>
        <appender-ref ref="ERROR_APPENDER"/>
    </root>

</configuration>-->

<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <property name="filters"
              value="full,$Proxy,javax.crypto.Cipher,
              com.sun.,sun.reflect.,java.lang.reflect.,java.io.,java.net.,org.eclipse.jetty.,
              org.apache.cxf.,org.springframework.beans.,org.springframework.context.,
              org.apache.commons.httpclient.,org.apache.commons.pool.,org.apache.http.,io.netty.,
              org.junit.,org.apache.maven.,org.springframework.amqp.rabbit."/>
    <property name="layout"
              value="[%d{yyyy-MM-dd HH:mm:ss.SSS}] %-5level [%thread] [traceId-%X{traceId}] %logger{100}  - %msg%n"/>
    <property name="maxHistory" value="30"/>
    <property name="maxFileSize" value="100MB"/>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${layout}</pattern>
        </encoder>
    </appender>

    <appender name="logFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--<File>./logs/server.log</File>-->
        <File>/Applications/software/WorkSpace/testdemo1/src/main/resources/logs/log.%d{yyyy-MM-dd}_%i.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>/Applications/software/WorkSpace/testdemo1/src/main/resources/logs/server.%d{yyyy-MM-dd}_%i.log</FileNamePattern>
            <MaxHistory>${maxHistory}</MaxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${layout}</pattern>
        </encoder>
    </appender>

    <appender name="toLogFileAsync" class="ch.qos.logback.classic.AsyncAppender">
        <discardingThreshold>0</discardingThreshold>
        <appender-ref ref="logFile"/>
    </appender>

    <root level="INFO">
        <appender-ref ref="toLogFileAsync"/>
        <appender-ref ref="console"/>
    </root>
    <!--<root level="debug">
        <appender-ref ref="toLogFileAsync"/>
        <appender-ref ref="console"/>
    </root>-->
</configuration>